<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nit.experiment.dao.AnswerMapper" >
  <resultMap id="BaseResultMap" type="com.nit.experiment.entity.Answer" >
    <id column="answer_id" property="answerId" jdbcType="INTEGER" />
    <result column="question_id" property="questionId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="reply_ids" property="replyIds" jdbcType="VARCHAR" />
    <result column="is_accept" property="isAccept" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    answer_id, question_id, user_id, content, reply_ids, is_accept, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_answer
    where answer_id = #{answerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_answer
    where answer_id = #{answerId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.nit.experiment.entity.Answer" >
    insert into t_answer (answer_id, question_id, user_id, 
      content, reply_ids, is_accept, 
      create_time)
    values (#{answerId,jdbcType=INTEGER}, #{questionId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{replyIds,jdbcType=VARCHAR}, #{isAccept,jdbcType=BIT}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.nit.experiment.entity.Answer" >
    insert into t_answer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="answerId != null" >
        answer_id,
      </if>
      <if test="questionId != null" >
        question_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="replyIds != null" >
        reply_ids,
      </if>
      <if test="isAccept != null" >
        is_accept,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="answerId != null" >
        #{answerId,jdbcType=INTEGER},
      </if>
      <if test="questionId != null" >
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="replyIds != null" >
        #{replyIds,jdbcType=VARCHAR},
      </if>
      <if test="isAccept != null" >
        #{isAccept,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nit.experiment.entity.Answer" >
    update t_answer
    <set >
      <if test="questionId != null" >
        question_id = #{questionId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="replyIds != null" >
        reply_ids = #{replyIds,jdbcType=VARCHAR},
      </if>
      <if test="isAccept != null" >
        is_accept = #{isAccept,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where answer_id = #{answerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nit.experiment.entity.Answer" >
    update t_answer
    set question_id = #{questionId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      reply_ids = #{replyIds,jdbcType=VARCHAR},
      is_accept = #{isAccept,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where answer_id = #{answerId,jdbcType=INTEGER}
  </update>
</mapper>