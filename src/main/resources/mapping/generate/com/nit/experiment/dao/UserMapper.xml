<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nit.experiment.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.nit.experiment.entity.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="stu_no" property="stuNo" jdbcType="VARCHAR" />
    <result column="class_name" property="className" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="user_type" property="userType" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="curriculum" property="curriculum" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, user_name, stu_no, class_name, password, user_type, sex, phone, email, qq, 
    curriculum, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.nit.experiment.entity.User" >
    insert into t_user (user_id, user_name, stu_no, 
      class_name, password, user_type, 
      sex, phone, email, qq, 
      curriculum, create_time)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{stuNo,jdbcType=VARCHAR}, 
      #{className,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR}, 
      #{sex,jdbcType=CHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{curriculum,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.nit.experiment.entity.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="stuNo != null" >
        stu_no,
      </if>
      <if test="className != null" >
        class_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="curriculum != null" >
        curriculum,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="stuNo != null" >
        #{stuNo,jdbcType=VARCHAR},
      </if>
      <if test="className != null" >
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="curriculum != null" >
        #{curriculum,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nit.experiment.entity.User" >
    update t_user
    <set >
      <if test="userName != null and userName != '' ">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="stuNo != null and stuNo != ''">
        stu_no = #{stuNo,jdbcType=VARCHAR},
      </if>
      <if test="className != null and className != ''" >
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userType != null and userType != ''" >
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="sex != null and sex != ''" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="phone != null and phone != ''" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null and email != ''" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null and qq != ''" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="curriculum != null and curriculum != ''" >
        curriculum = #{curriculum,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nit.experiment.entity.User" >
    update t_user
    set user_name = #{userName,jdbcType=VARCHAR},
      stu_no = #{stuNo,jdbcType=VARCHAR},
      class_name = #{className,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      curriculum = #{curriculum,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>