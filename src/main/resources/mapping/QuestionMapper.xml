<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nit.experiment.dao.QuestionMapper" >
  <!--插入记录到t_user_question-->
  <insert id="insertUserQuestion">
    insert into t_user_question(question_id, user_id) values (#{questionId}, #{userId})
  </insert>

  <!--查询user_id和question_id对应的记录是否存在-->
  <select id="existenceOfUserQuestion" resultType="java.lang.Integer">
    select count(*) from t_user_question
    where question_id = #{questionId} and user_id = #{userId}
  </select>
  <!--更新点赞状态-->
  <update id="updateThumbup">
    update t_user_question set is_thumbup = #{targetStatus}
    where user_id = #{userId} and question_id = #{questionId}
  </update>
  <!--更新问题收藏状态-->
  <update id="updateQuestionCollectedStatus">
      update t_user_question set is_collected = #{targetStatus}
      where user_id = #{userId} and question_id = #{questionId}
  </update>
  <!--条件查询所有问题-->
  <select id="selectAllQuestions" resultType="com.nit.experiment.dto.QuestionListDTO">
    select a.question_id, a.title, a.content, a.category, a.view_no, a.thumbup_no, a.answer_no, a.create_time, b.user_name from t_question a, t_user b
    <where>
      a.user_id=b.user_id
      <if test="searchKey != null and searchKey != '' ">
        and (a.title like CONCAT('%', #{searchKey, jdbcType=VARCHAR}, '%')
        or a.content like CONCAT('%', #{searchKey, jdbcType=VARCHAR}, '%')
        or a.category like CONCAT('%', #{searchKey, jdbcType=VARCHAR}, '%'))
      </if>
    </where>
    order by
    <if test="orderColumn != null and orderColumn !='' and orderType != null and orderType != '' ">
      ${orderColumn} ${orderType},
    </if>
    a.question_id asc
  </select>
  <!--查询当前用户对问题的操作情况(是否点赞、收藏)-->
  <select id="queryUserWithQuestionOperation" resultType="java.util.HashMap">
    select is_thumbup as thumbup,is_collected as collected from t_user_question
    where user_id = #{userId} and question_id = #{questionId}
  </select>

</mapper>